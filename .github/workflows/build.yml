name: Build SoundBreak App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            arch: 'aarch64'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            arch: 'x86_64'

    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: latest
        run_install: false

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: aarch64-apple-darwin,x86_64-apple-darwin

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build app
      run: pnpm tauri build ${{ matrix.args }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: soundbreak-${{ matrix.arch }}
        path: |
          src-tauri/target/${{ matrix.arch }}-apple-darwin/release/bundle/dmg/*.dmg
          src-tauri/target/${{ matrix.arch }}-apple-darwin/release/bundle/macos/*.app

    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: |
          src-tauri/target/${{ matrix.arch }}-apple-darwin/release/bundle/dmg/*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}